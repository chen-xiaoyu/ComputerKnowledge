Java 中提供这四种引用类型主要有两个目的：
第一是可以让程序员通过代码的方式决定某些对象的生命周期；
第二是有利于 JVM 进行垃圾回收。

（1）强引用：String a=new String();
强引用所指向的对象在任何时候都不会被系统回收。

（2）软引用 SoftReference
内存溢出之前进行回收，GC 时如果内存足够，就不回收。使用场景：在内存足够的情况下进行缓存，提升速度。软引用使用 get() 方法取得对象的强引用从而访问目标对象。

（3）弱引用 WeakReference
每次 GC 时回收，无论内存是否足够。使用场景：1. ThreadLocalMap 防止内存泄漏  2. 监控对象是否将要被回收。

（4）虚引用 PhantomReference
每次垃圾回收时都会被回收，主要用于监测对象是否已经从内存中删除。
