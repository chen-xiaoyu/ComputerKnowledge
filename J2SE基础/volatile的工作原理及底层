volatile是一个Java关键字，主要用于并发编程模块中，它是一个轻量级的synchronized，主要作用是在并发编程中保证共享变量的可见性。
可见性：是指当一个线程修改贡献变量时，其他线程能够感知到变量的变化。
由于使用volatile不会引起线程的上下文切换和调度，所以开销较小，与synchronized相比使用成本更低，更加轻量。

1.volatile的特性：
volatile可见性：对一个volatile的读，总可以看到对这个变量最终的写；
volatile原子性：volatile对单个读/写具有原子性（32位Long、Double），但是复合操作除外，例如：i++；
jvm底层采用“内存屏障”来实现volatile语义。

2.volatile的内存语义及实现：
在JMM中，线程之间的通信采用共享内存来实现的。
volatile内存语义是：
当写一个volatile变量时，JMM会把该线程对应的本地内存中的共享变量值立即刷新到主内存中；
当读一个volatile变量时，JMM会把该线程对应的本地内存设置为无效，直接从主内存中读取共享变量。

共享内存：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量配合使用，来实现进程间的同步和通信。
